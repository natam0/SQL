-- Here I used SQL to answer questions about a data set that included 11 related tables

-- 1. Show Customers (their full names, customer ID, and country) who are not in the US. 

SELECT FirstName, LastName, CustomerID, Country
FROM chinook.customers
WHERE Country != 'USA';

-- 2. Show only the Customers from Brazil.

SELECT FirstName, LastName, CustomerID, Country
FROM chinook.customers
WHERE Country = 'Brazil';

-- 3. Find the Invoices of customers who are from Brazil. The resulting table should show 
-- the customer's full name, Invoice ID, Date of the invoice, and billing country.

SELECT cust.FirstName, cust.LastName, invoices.InvoiceId, invoices.InvoiceDate, invoices.BillingCountry
FROM chinook.customers cust
LEFT JOIN invoices ON cust.CustomerId = invoices.CustomerId
WHERE cust.Country = 'Brazil';

-- 4. Show the Employees who are Sales Agents.

SELECT FirstName, LastName, Title
FROM employees
WHERE Title = 'Sales Support Agent';

-- 5. Find a unique/distinct list of billing countries from the Invoice table.

SELECT distinct BillingCountry
FROM invoices;

-- 6. Provide a query that shows the invoices associated with each sales agent. The resulting 
-- table should include the Sales Agent's full name.

SELECT invoices.InvoiceId, employees.FirstName, employees.LastName
FROM invoices
LEFT JOIN customers ON customers.CustomerId = invoices.CustomerId
LEFT JOIN employees ON customers.SupportRepId = employees.EmployeeId
ORDER BY invoices.InvoiceId;

SELECT InvoiceId
FROM invoices; -- making sure all invoices were accounted for from previous query

-- 7. Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers.

SELECT invoices.Total
, customers.FirstName cust_FirstName
, customers.LastName cust_LastName
, customers.Country
, employees.FirstName agent_FirstName
, employees.LastName agent_LastName
FROM invoices
LEFT JOIN customers ON customers.CustomerId = invoices.CustomerId
LEFT JOIN employees ON customers.SupportRepId = employees.EmployeeId
ORDER BY invoices.InvoiceId;

-- 8. How many Invoices were there in 2009?

SELECT count(InvoiceDate) AS '2009 Invoices'
FROM invoices
WHERE InvoiceDate LIKE '2009%';

-- 9. What are the total sales for 2009?

SELECT SUM(Total)
FROM invoices
WHERE InvoiceDate LIKE '2009%';

-- 10.Write a query that includes the purchased track name with each invoice line ID.

SELECT tracks.name, invoice_items.InvoiceLineId
FROM tracks
JOIN invoice_items ON tracks.TrackId = invoice_items.TrackId;

-- 11. Write a query that includes the purchased track name AND artist name with each invoice line ID.

SELECT tracks.name Track, artists.Name, invoice_items.InvoiceLineId
FROM tracks
JOIN invoice_items ON tracks.TrackId = invoice_items.TrackId
JOIN albums ON tracks.AlbumId = albums.AlbumId
JOIN artists ON albums.ArtistId = artists.ArtistId;

-- 12. Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre.

SELECT t.Name AS 'Track', a.Title AS 'Album', m.Name AS 'Media Type', g.Name AS 'Genre'
FROM tracks t
JOIN albums a ON t.AlbumId = a.AlbumId
JOIN genres g ON g.genreId = t.GenreId
JOIN media_types m ON m.MediaTypeId = t.MediaTypeId;

-- 13. Show the total sales made by each sales agent.

SELECT emp.FirstName, emp.LastName, ROUND(SUM(inv.Total), 2) AS 'Total Sales'
FROM employees emp
JOIN customers cust ON cust.SupportRepId = emp.EmployeeId
JOIN invoices inv ON inv.CustomerId = cust.CustomerId
GROUP BY emp.EmployeeId;

-- 14. Which sales agent made the most dollars in sales in 2009?

SELECT emp.FirstName, emp.LastName, ROUND(SUM(inv.Total), 2) AS 'Total Sales'
FROM employees emp
JOIN customers cust ON cust.SupportRepId = emp.EmployeeId
JOIN invoices inv ON inv.CustomerId = cust.CustomerId
WHERE inv.InvoiceDate LIKE '2009%'
GROUP BY emp.EmployeeId
ORDER BY (ROUND(SUM(inv.Total), 2)) DESC LIMIT 1;
