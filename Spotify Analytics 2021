-- Here I downloaded Spotify data from 2021 from Kaggle, created a table, inserted the data, and used SQL to make sense of the data.

-- Creating the table
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL );

-- Then I inserted the data from the csv file from Kaggle
-- Next I used SQL to explore the data

-- What are the best key and modality for a song to be popular?
SELECT track_name, popularity, song_key, song_mode
FROM BIT_DB.Spotifydata
ORDER BY popularity desc; -- shows popularity, key, and modality

SELECT song_key, song_mode, avg(popularity), count(popularity)
FROM BIT_DB.Spotifydata
GROUP BY song_key, song_mode
ORDER BY avg(popularity) desc; -- want to group by key and mode to compare the average popularities, while taking into account the number of entries in each category

-- which artist in this top 50 had the longest song?
SELECT artist_name, track_name, duration_ms
FROM BIT_DB.Spotifydata
ORDER BY duration_ms DESC LIMIT 1;
